{"version":3,"file":"static/js/737.3f02d5b5.chunk.js","mappings":"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","sources":["components/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/phonebook/contacts/operation.contact.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin-left: 20px;\n`;","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  background-color: #e5e9eb;\n  max-width: 300px;\n  padding: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 200px;\n  font-size: 20px;\n  line-height: 1.3;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  padding: 5px 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 15px;\n  border-radius: 20px;\n  border: none;\n  cursor: pointer;\n  :hover,\n  :focus {\n   background-color: grey;\n  }\n`;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addContacts } from 'redux/operations';\nimport { getContacts } from 'redux/selector';\nimport { Form, Input, Label, Button } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n    const contacts = useSelector(getContacts);\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n        \n            default:\n                return;\n        }\n    };\n\n\n    const handleSubmit = e => {\n    return contacts?.find(contact => contact.name === name)\n      ? toast.error(`${name} is already in contacts`)\n      : dispatch(\n          addContacts({\n            name,\n            number,\n          })\n        );\n  };\n\n\n\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Label>\n                Name\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    onChange={handleChange}\n                />\n            </Label>\n            <Label>\n                Number\n                <Input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    onChange={handleChange}\n                />\n            </Label>\n            <Button type=\"submit\">Add contact</Button>\n        </Form>\n    );\n    \n\n};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { getContactsList, addContactsList, removeContact } from \"services/API\";\n\nexport const fetchContacts = createAsyncThunk(\n    'contacts/fetchAll',\n\n    async (_, thunkAPI) => {\n        try {\n            const r = await getContactsList();\n            return r;\n        } catch (e) {\n            return thunkAPI.rejectWithValue(e.message);\n        }\n    }\n);\n\n\nexport const addContact = createAsyncThunk(\n    'contacts/addContact',\n    async (data, thunkAPI) => {\n        try {\n            const r = await addContactsList(data);\n            return r;\n        } catch (e) {\n            return thunkAPI.rejectWithValue(e.message);\n        }\n    }\n);\n\n\nexport const deleteContact = createAsyncThunk(\n    'contacts/deleteContact',\n    async (id, thunkAPI) => {\n        try {\n            const r = await removeContact(id);\n            return r;\n        } catch (e) {\n            return thunkAPI.rejectWithValue(e.message);\n        }\n    }\n);","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  font-size: 20px;\n  line-height: 1.3;\n  :not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: 15px;\n  border-radius: 20px;\n  border: none;\n  padding: 6px 14px;\n  font-size: 16px;\n  line-height: 1.3;\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: blue;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/phonebook/contacts/operation.contact';\nimport { getContacts } from 'redux/selector';\nimport { Item, Button } from './ContactList.styled';\n\nexport const ContactList = () => {\n\n    const dispatch = useDispatch();\n    const getContactItem = useSelector(getContacts);\n    \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n    \n      const removeContact = id => {\n    dispatch(deleteContact(id));\n  };\n    \n    return (\n        <ul>\n            {getContactItem.map(({ id, name, number }) => {\n                return (\n                    <Item key={id}>\n                        {name}: {number}\n                        <Button\n                            onClick={() => {\n                                removeContact(id);\n                            }}\n                        >\n                            Delete\n                        </Button>\n                    </Item>\n                )\n            })}\n        </ul>\n    );\n};\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.exact({\n            createdAt: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            phone: PropTypes.node,\n            number: PropTypes.node,\n            id: PropTypes.string.isRequired,\n        })\n    ),\n};","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  line-height: 1.3;\n`;\n\nexport const Input = styled.input`\n  max-width: 200px;\n  padding: 5px 10px;\n  margin-top: 10px;\n`;","import {  changeFilterAction } from '../../redux/phonebook/filter/sliceFilter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const value = useSelector(state => state.filter.filter);\n\n    const filerContact = e => {\n        const { value } = e.currentTarget;\n        dispatch( changeFilterAction(value));\n    }\n\n    return (\n        <Label>\n            Search contacts by name\n            <Input\n                type=\"text\" name='filter' value={value} onChange={filerContact} />\n        </Label>\n    );\n};","import { Container } from \"components/App.styled\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\n\n\nexport default function ContactPage() {\n    return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n    )\n}"],"names":["Container","styled","Form","Label","Input","Button","ContactForm","contacts","useSelector","getContacts","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","e","target","value","onSubmit","find","contact","toast","addContacts","type","pattern","title","required","onChange","fetchContacts","createAsyncThunk","_","thunkAPI","getContactsList","r","rejectWithValue","message","deleteContact","data","addContactsList","id","removeContact","Item","ContactList","getContactItem","useEffect","map","onClick","Filter","state","filter","currentTarget","changeFilterAction","ContactPage"],"sourceRoot":""}